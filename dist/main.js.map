{"version":3,"sources":["webpack://Defend-My-Food/./src/index.js"],"names":["document","addEventListener","canvas","getElementById","width","height","ctx","getContext","CELLSIZE","GAMEGRID","GOKUS","MONEY","mouse","x","undefined","y","e","offsetX","offsetY","Cell","this","first","second","collision","strokeStyle","strokeRect","push","createGrid","Goku","shooting","projectiles","timer","fillStyle","fillRect","font","fillText","gridPostitionX","gridPostitionY","i","length","animate","clearRect","draw","handleGameGrid","handleGokus","requestAnimationFrame"],"mappings":"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","file":"main.js","sourcesContent":["// import './styles/index.css';\n\nimport Game from \"./scripts/game\";\nimport { loadImage } from \"./scripts/image_loader\";\n// import { loadImage } from \"./scripts/image_loader\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.width = 900;\n  canvas.height = 600;\n  const ctx = canvas.getContext(\"2d\");\n\n\n\n  // global variables\n  const CELLSIZE = 50;\n  const CELLGAP = 3;\n  const GAMEGRID = [];\n  const GOKUS = [];\n  let MONEY = 1000;\n\n\n  // mouse\nconst mouse = {\n  x: undefined,\n  y: undefined,\n  width: 0.1,\n  height: 0.1,\n}\n\n// let canvasPosition = canvas.getBoundingClientRect();\ncanvas.addEventListener('mousemove', function(e) {\n  // mouse.x = e.x - canvasPosition.left;\n  mouse.x = e.offsetX\n  mouse.y = e.offsetY\n  // mouse.y = e.y - canvasPosition.top;\n});\n\ncanvas.addEventListener('mouseleave', function(){\n  mouse.x = undefined;\n  mouse.y = undefined\n})\n  // board\n  const controlsBar = {\n    width: canvas.width,\n    height: CELLSIZE,\n  }\n\n  class Cell {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.width = CELLSIZE;\n      this.height = CELLSIZE;\n\n    }\n    draw() {\n      if (mouse.x && mouse.y && collision(this, mouse)) {\n        ctx.strokeStyle = 'red';\n        ctx.strokeRect(this.x, this.y, this.width, this.height);\n      }\n    }\n  }\n\n  function createGrid() {\n    for (let y = 0; y < canvas.height; y += CELLSIZE) {\n      for (let x = 0; x < canvas.width-CELLSIZE*2; x += CELLSIZE) {\n        GAMEGRID.push(new Cell(x, y));\n      }\n    }\n  }\n\n  createGrid();\n\n\n  function handleGameGrid() {\n    for (let i = 0; i < GAMEGRID.length; i++) {\n      GAMEGRID[i].draw();\n    }\n  }\n\n  function createMap() {\n    ctx.fillStyle = \"#7cfc00\";\n    ctx.fillRect(0, CELLSIZE, canvas.width - CELLSIZE * 4, CELLSIZE);\n\n    ctx.fillStyle = \"#7cfc00\";\n    ctx.fillRect(\n      canvas.width - CELLSIZE * 4,\n      CELLSIZE,\n      CELLSIZE,\n      canvas.height - CELLSIZE * 2\n    );\n\n    ctx.fillStyle = \"#7cfc00\";\n    ctx.fillRect(\n      CELLSIZE,\n      canvas.height - CELLSIZE * 2,\n      canvas.width - CELLSIZE * 4,\n      CELLSIZE\n    );\n\n    ctx.fillStyle = \"#7cfc00\";\n    ctx.fillRect(CELLSIZE, CELLSIZE * 4, CELLSIZE, CELLSIZE * 6);\n\n    ctx.fillStyle = \"#7cfc00\";\n    ctx.fillRect(CELLSIZE, CELLSIZE * 4, CELLSIZE * 11, CELLSIZE);\n\n    ctx.fillStyle = \"#7cfc00\";\n    ctx.fillRect(CELLSIZE*11, CELLSIZE * 4, CELLSIZE, CELLSIZE*4);\n\n  }\n\n\n\n    // ctx.fillStyle = 'white'\n    // ctx.fillRect(0, 0, 700, 500);\n\n    // ctx.fillStyle = '#7cfc00'\n    // ctx.fillRect(0, 20, 270, 20);\n\n    // ctx.fillStyle = '#7cfc00'\n    // ctx.fillRect(240, 20, 30, 110);\n\n    // ctx.fillStyle = '#7cfc00'\n    // ctx.fillRect(30, 110, 240, 20);\n\n    // ctx.fillStyle = \"#7cfc00\";\n    // ctx.fillRect(30, 60, 30, 60);\n\n    // ctx.fillStyle = \"#7cfc00\";\n    // ctx.fillRect(30, 60, 180, 20);\n\n\n    // projectiles\n\n\n    // gokus\n\n    class Goku {\n      constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.width = CELLSIZE;\n        this.height = CELLSIZE;\n        this.shooting = false;\n        this.projectiles = [];\n        this.timer = 0;\n        // this.health = 100\n\n      }\n      draw() {\n        ctx.fillStyle = 'blue';\n        ctx.fillRect(this.x, this.y, this.width, this.height);\n        ctx.fillStyle = 'gold';\n        ctx.font = '10px Arial';\n        // ctx.fillText(Math.floor(this.health), this.x + 15, this.height + 30);\n        ctx.fillText(\"Goku\", this.x + 15, this.y + 30);\n      }\n    }\n\n    canvas.addEventListener('click', function() {\n      const gridPostitionX = mouse.x - (mouse.x % CELLSIZE);\n      const gridPostitionY = mouse.y - (mouse.y % CELLSIZE);\n      if (gridPostitionX > canvas.width-CELLSIZE*3) return;\n      for (let i = 0; i < GOKUS.length; i++) {\n        if (GOKUS[i].x === gridPostitionX && GOKUS[i].y === gridPostitionY)\n        return;\n      }\n      let gokuCost = 100;\n      if (MONEY >= gokuCost) {\n        GOKUS.push(new Goku(gridPostitionX, gridPostitionY));\n        MONEY -= gokuCost;\n      }\n    });\n\n    function handleGokus() {\n      for (let i = 0; i < GOKUS.length; i++) {\n        GOKUS[i].draw();\n      }\n    }\n\n    // enemies\n\n\n    // resources\n\n\n    // utilities\n\n    function handleGameStatus() {\n      if (MONEY > 400) {\n        ctx.fillStyle = 'green'\n        ctx.font = '15px Arial';\n      } else {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"15px Arial\";\n      }\n      ctx.fillText('Money: ' + MONEY, 810, 30 )\n    }\n\n    function animate() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"lightgray\";\n      ctx.fillRect(canvas.width - CELLSIZE * 2, 0, CELLSIZE * 2, canvas.height);\n\n      createMap();\n      handleGameGrid();\n      handleGokus();\n      handleGameStatus();\n      requestAnimationFrame(animate);\n    }\n    animate()\n\n\n    function collision(first, second) {\n      if ( !(first.x > second.x + second.width ||\n            first.x + first.width < second.x ||\n            first.y > second.y + second.height ||\n            first.y + first.height < second.y)\n\n      ) {\n        return true;\n      };\n    };\n\n\n\n\n// ctx.drawImage(document.getElementById('picture'),0,0);\n    // function insertImage() {\n    //   image = new Image();\n    //   image.src = \"images/ramen1.jpg\"; //any img src\n    //   image.onload = function () {\n    //     content.drawImage(image, 300, 300);\n    //   };\n    // }\n\n    // insertImage();\n   \n\n    // const game = new Game(canvas, ctx);\n    // loadImage('./images/ramen1.jpg')\n    \n})\n\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const canvasEl = document.getElementById(\"canvas\");\n\n//   canvasEl.width = 700;\n//   canvasEl.height = 500;\n//   const ctx = canvasEl.getContext(\"2d\");\n\n//   ctx.fixllRect(0, 0, 700, 500);\n\n//   // let mo = new MovingObject({ pos: [100, 100], vel: [1, 2], radius: 50, color: \"blue\" })\n//   // mo.draw(ctx);\n//   // window.mo = mo;\n\n// //   let g = new GameView(ctx);\n// //   g.start();\n// //   window.g = g;\n// });\n"],"sourceRoot":""}